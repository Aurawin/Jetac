import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.uiDesigner.core.GridLayoutManager;
import com.intellij.uiDesigner.core.Spacer;

import javax.swing.*;
import javax.swing.border.TitledBorder;
import javax.swing.tree.DefaultTreeModel;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

import com.aurawin.core.lang.Table;

import org.json.JSONObject;
import org.pushingpixels.substance.api.skin.SubstanceBusinessLookAndFeel;


public class formMain {


    protected JSONObject jsonEdit;
    private static boolean Loading;
    private static formMain mainForm;

    private JPanel frmMain;
    private JPanel pnlMain;
    private JPanel pnlToolbarButtons;
    private JPanel sbStatus;
    private JPanel pnlToolbar;
    private JToolBar tbCollection;

    JPanel sbCollectionItemIndex;
    JLabel lblCollectionItemIndex;
    JPanel sbCollectionItemTotal;
    JLabel lblCollectionItemTotal;
    JLabel lblCollectionItemStatus;
    JButton btnCollectionNew;
    JTree tvCollection;
    JTabbedPane tpPages;
    JPanel sbPosition;
    JPanel sbCaption;
    JLabel lblCollectionTitle;
    JLabel lblCollectionName;
    JButton btnOpen;
    JButton btnValidate;

    public formMain() {
        btnCollectionNew.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                collectionTab tab = new collectionTab(mainForm.tpPages);
            }
        });
    }

    public static void setTheme() {
        Icon leafIcon = new ImageIcon(Class.class.getResource("/icons/tree/leafO_16.png"));
        Icon openIcon = new ImageIcon(Class.class.getResource("/icons/tree/nodeO_16.png"));
        Icon closedIcon = new ImageIcon(Class.class.getResource("/icons/tree/nodeC_16.png"));

        UIManager.put("Tree.leafIcon", leafIcon);
        UIManager.put("Tree.openIcon", openIcon);
        UIManager.put("Tree.closedIcon", closedIcon);

    }

    public static void setLanguage() {
        mainForm.btnCollectionNew.setToolTipText(Table.Hint.Format(Table.Hint.Add, Table.Action.a, Table.Item.JSONObject));
    }

    public static void main(String[] args) {
        try {
            UIManager.setLookAndFeel(new SubstanceBusinessLookAndFeel());
        } catch (Exception e) {
            e.printStackTrace();
        }
        Loading = true;
        JFrame frame = new JFrame("formMain");
        mainForm = new formMain();
        frame.setContentPane(mainForm.frmMain);
        frame.setPreferredSize(new Dimension(640, 480));

        setLanguage();

        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        frame.pack();
        frame.setVisible(true);

        Loading = false;
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        frmMain = new JPanel();
        frmMain.setLayout(new CardLayout(0, 0));
        frmMain.setMinimumSize(new Dimension(640, 480));
        frmMain.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), null));
        pnlMain = new JPanel();
        pnlMain.setLayout(new BorderLayout(0, 0));
        frmMain.add(pnlMain, "Collection");
        pnlToolbar = new JPanel();
        pnlToolbar.setLayout(new BorderLayout(0, 0));
        pnlMain.add(pnlToolbar, BorderLayout.NORTH);
        tbCollection = new JToolBar();
        tbCollection.setFloatable(false);
        pnlToolbar.add(tbCollection, BorderLayout.CENTER);
        pnlToolbarButtons = new JPanel();
        pnlToolbarButtons.setLayout(new FlowLayout(FlowLayout.LEFT, 2, 1));
        tbCollection.add(pnlToolbarButtons);
        pnlToolbarButtons.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), null));
        btnCollectionNew = new JButton();
        btnCollectionNew.setIcon(new ImageIcon(getClass().getResource("/icons/default/new_16.png")));
        btnCollectionNew.setIconTextGap(4);
        btnCollectionNew.setPressedIcon(new ImageIcon(getClass().getResource("/icons/pressed/new_16.png")));
        btnCollectionNew.setRolloverIcon(new ImageIcon(getClass().getResource("/icons/rollover/new_16.png")));
        btnCollectionNew.setRolloverSelectedIcon(new ImageIcon(getClass().getResource("/icons/rollover-pressed/new_16.png")));
        btnCollectionNew.setSelectedIcon(new ImageIcon(getClass().getResource("/icons/pressed/new_16.png")));
        btnCollectionNew.setText("");
        btnCollectionNew.setVerticalAlignment(0);
        btnCollectionNew.setVerticalTextPosition(0);
        pnlToolbarButtons.add(btnCollectionNew);
        btnOpen = new JButton();
        btnOpen.setText("");
        pnlToolbarButtons.add(btnOpen);
        btnValidate = new JButton();
        btnValidate.setText("Validate");
        pnlToolbarButtons.add(btnValidate);
        final Spacer spacer1 = new Spacer();
        pnlToolbarButtons.add(spacer1);
        lblCollectionTitle = new JLabel();
        lblCollectionTitle.setHorizontalAlignment(0);
        lblCollectionTitle.setHorizontalTextPosition(0);
        lblCollectionTitle.setText("Collection Editor");
        pnlToolbarButtons.add(lblCollectionTitle);
        final Spacer spacer2 = new Spacer();
        pnlToolbarButtons.add(spacer2);
        lblCollectionName = new JLabel();
        lblCollectionName.setText("");
        pnlToolbarButtons.add(lblCollectionName);
        sbStatus = new JPanel();
        sbStatus.setLayout(new BorderLayout(0, 0));
        pnlMain.add(sbStatus, BorderLayout.SOUTH);
        sbStatus.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), null));
        sbPosition = new JPanel();
        sbPosition.setLayout(new FlowLayout(FlowLayout.CENTER, 0, 0));
        sbPosition.setMaximumSize(new Dimension(32767, 25));
        sbPosition.setPreferredSize(new Dimension(105, 25));
        sbStatus.add(sbPosition, BorderLayout.WEST);
        sbPosition.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), null));
        sbCollectionItemIndex = new JPanel();
        sbCollectionItemIndex.setLayout(new FlowLayout(FlowLayout.CENTER, 10, 5));
        sbPosition.add(sbCollectionItemIndex);
        lblCollectionItemIndex = new JLabel();
        lblCollectionItemIndex.setInheritsPopupMenu(true);
        lblCollectionItemIndex.setText("Index");
        sbCollectionItemIndex.add(lblCollectionItemIndex);
        sbCollectionItemTotal = new JPanel();
        sbCollectionItemTotal.setLayout(new FlowLayout(FlowLayout.CENTER, 10, 5));
        sbPosition.add(sbCollectionItemTotal);
        lblCollectionItemTotal = new JLabel();
        lblCollectionItemTotal.setText("Total");
        sbCollectionItemTotal.add(lblCollectionItemTotal);
        sbCaption = new JPanel();
        sbCaption.setLayout(new FlowLayout(FlowLayout.LEFT, 5, 5));
        sbStatus.add(sbCaption, BorderLayout.CENTER);
        sbCaption.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), null, TitledBorder.DEFAULT_JUSTIFICATION, TitledBorder.DEFAULT_POSITION, null, new Color(-4473925)));
        lblCollectionItemStatus = new JLabel();
        lblCollectionItemStatus.setText("asdfasdfasdf");
        sbCaption.add(lblCollectionItemStatus);
        tpPages = new JTabbedPane();
        tpPages.setMinimumSize(new Dimension(2, 20));
        pnlMain.add(tpPages, BorderLayout.CENTER);
        tpPages.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), null));
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return frmMain;
    }
}
